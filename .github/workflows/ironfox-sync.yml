name: IronFox Upstream Sync

on:
  schedule:
    - cron: '0 */1 * * *'
  workflow_dispatch:

env:
  UPSTREAM_REPO: 'https://github.com/ironfox-oss/IronFox'
  FORK_REPO: 'https://github.com/burhancodes/IronFox'
  TARGET_BRANCH: 'mocha'

jobs:
  check-and-sync:
    runs-on: ubuntu-latest
    outputs:
      sync-completed: ${{ steps.sync-status.outputs.completed }}
      latest-tag: ${{ steps.get-upstream-tag.outputs.tag }}

    steps:
      - name: Checkout control repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DISPATCH }}
          fetch-depth: 0

      - name: Get latest upstream tag
        id: get-upstream-tag
        run: |
          echo "Fetching latest tag from upstream..."
          LATEST_TAG=$(git ls-remote --tags --sort=-v:refname $UPSTREAM_REPO | grep -v '^{}' | head -n1 | sed 's|.*refs/tags/||')
          if [ -z "$LATEST_TAG" ]; then
            echo "❌ Failed to fetch tags from upstream or no tags found."
            exit 1
          fi
          CLEAN_TAG=$(echo "$LATEST_TAG" | sed 's|^v||')
          echo "tag=$CLEAN_TAG" >> $GITHUB_OUTPUT
          echo "original_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "📦 Latest upstream tag: $LATEST_TAG"

      - name: Get current synced tag from ironfox.txt
        id: get-current-tag
        run: |
          if [ -f "ironfox.txt" ]; then
            CURRENT_TAG=$(awk '/Latest synced tag:/ {print $4}' ironfox.txt)
            echo "📌 Current synced tag: $CURRENT_TAG"
            echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ ironfox.txt not found, treating as first sync"
            echo "current_tag=" >> $GITHUB_OUTPUT
          fi

      - name: Clone fork repository
        run: |
          git clone https://${{ secrets.BVTOKEN }}@github.com/burhancodes/IronFox.git ironfox-fork

      - name: Configure Git and add upstream
        working-directory: ./ironfox-fork
        run: |
          git config user.name "burhanverse"
          git config user.email "contact@burhanverse.eu.org"
          git remote add upstream $UPSTREAM_REPO
          git fetch upstream --tags --force --prune

      - name: Check if new tag is available
        id: check-tag
        run: |
          UPSTREAM_TAG="${{ steps.get-upstream-tag.outputs.tag }}"
          CURRENT_TAG="${{ steps.get-current-tag.outputs.current_tag }}"

          if [ "$UPSTREAM_TAG" != "$CURRENT_TAG" ] && [ -n "$UPSTREAM_TAG" ]; then
            echo "🔄 New tag detected: $UPSTREAM_TAG"
            echo "new_tag=true" >> $GITHUB_OUTPUT
          else
            echo "✅ Already up to date"
            echo "new_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Merge upstream changes
        if: steps.check-tag.outputs.new_tag == 'true'
        working-directory: ./ironfox-fork
        run: |
          TAG="${{ steps.get-upstream-tag.outputs.original_tag }}"
          echo "Syncing upstream tag $TAG into $TARGET_BRANCH..."
          
          # Checkout or create mocha branch
          if git show-ref --verify --quiet refs/remotes/origin/$TARGET_BRANCH; then
            git checkout $TARGET_BRANCH
            git pull origin $TARGET_BRANCH
          else
            git checkout -b $TARGET_BRANCH
          fi
          
          # Merge upstream changes
          if git merge --no-edit "refs/tags/$TAG"; then
            echo "✅ Merge successful, pushing to $TARGET_BRANCH..."
            git push origin $TARGET_BRANCH
          else
            echo "❌ Merge conflicts detected. Manual resolution required."
            git merge --abort
            exit 1
          fi

      - name: Set sync completion status
        id: sync-status
        if: always()
        run: |
          if [ "${{ steps.check-tag.outputs.new_tag }}" == "true" ] && [ "${{ job.status }}" == "success" ]; then
            echo "completed=true" >> $GITHUB_OUTPUT
          else
            echo "completed=false" >> $GITHUB_OUTPUT
          fi

      - name: Summary
        if: always()
        run: |
          TAG="${{ steps.get-upstream-tag.outputs.tag }}"
          if [ "${{ steps.check-tag.outputs.new_tag }}" == "true" ] && [ "${{ job.status }}" == "success" ]; then
            echo "✅ Synced upstream tag $TAG into mocha branch"
          elif [ "${{ steps.check-tag.outputs.new_tag }}" == "true" ]; then
            echo "❌ Sync failed for new tag $TAG"
          else
            echo "ℹ️ No new tags found. Latest tag $TAG already processed."
          fi

  log-date:
    runs-on: ubuntu-latest
    needs: check-and-sync
    if: needs.check-and-sync.outputs.sync-completed == 'true'
    
    steps:
      - name: Checkout control repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Create or update ironfox.txt
        run: |
          cat > ironfox.txt << EOF
          Last updated: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          Latest synced tag: ${{ needs.check-and-sync.outputs.latest-tag }}
          EOF

      - name: Commit and push changes
        run: |
          git config user.name "itsnotsos"
          git config user.email "179767921+itsnotsos@users.noreply.github.com"
          git add ironfox.txt
          git commit -m "Updated IronFox to ${{ needs.check-and-sync.outputs.latest-tag }}"
          git push origin main
