name: IronFox Upstream Sync

on:
  schedule:
    - cron: '0 */1 * * *'
  workflow_dispatch:

env:
  UPSTREAM_REPO: https://github.com/ironfox-oss/IronFox
  FORK_REPO: https://github.com/burhancodes/IronFox
  TARGET_BRANCH: mocha
  UPSTREAM_DEV: dev

jobs:
  sync:
    runs-on: ubuntu-latest
    outputs:
      synced: ${{ steps.status.outputs.synced }}
      tag: ${{ steps.tag.outputs.tag }}

    steps:
      - name: Checkout control repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DISPATCH }}

      - name: Get latest upstream tag
        id: tag
        run: |
          TAG=$(git ls-remote --tags --sort=-v:refname ${{ env.UPSTREAM_REPO }} \
                | grep -v '^{}' | head -n1 | cut -d/ -f3)
          CLEAN=$(echo "$TAG" | sed 's/^v//')
          echo "tag=$CLEAN" >> $GITHUB_OUTPUT
          echo "raw=$TAG" >> $GITHUB_OUTPUT
          echo "Latest tag: $TAG"

      - name: Get current tag
        id: current
        run: |
          if [[ -f ironfox.txt ]]; then
            CUR=$(grep "Latest synced tag:" ironfox.txt | awk '{print $4}')
            echo "tag=$CUR" >> $GITHUB_OUTPUT
          else
            echo "tag=" >> $GITHUB_OUTPUT
          fi

      - name: Clone fork & setup
        run: |
          git clone https://${{ secrets.BVTOKEN }}@github.com/burhancodes/IronFox.git fork
          cd fork
          git config user.name "burhanverse"
          git config user.email "contact@burhanverse.eu.org"
          git remote add upstream ${{ env.UPSTREAM_REPO }}
          git fetch upstream --tags --prune

      - name: Sync dev if new tag
        if: steps.tag.outputs.tag != steps.current.outputs.tag
        run: |
          cd fork
          git checkout -B ${{ env.TARGET_BRANCH }} origin/${{ env.TARGET_BRANCH }} || git checkout -b ${{ env.TARGET_BRANCH }}
          git merge --no-edit upstream/${{ env.UPSTREAM_DEV }} || (git merge --abort && exit 1)
          git push origin ${{ env.TARGET_BRANCH }}

      - name: Set sync status
        id: status
        run: |
          echo "synced=${{ steps.tag.outputs.tag != steps.current.outputs.tag && job.status == 'success' }}" >> $GITHUB_OUTPUT

  update-log:
    needs: sync
    if: needs.sync.outputs.synced == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Update ironfox.txt
        run: |
          cat > ironfox.txt << EOF
          Last updated: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          Latest synced tag: ${{ needs.sync.outputs.tag }}
          EOF

      - name: Commit & push
        run: |
          git config user.name "itsnotsos"
          git config user.email "179767921+itsnotsos@users.noreply.github.com"
          git add ironfox.txt
          git commit -m "Synced to ${{ needs.sync.outputs.tag }}"
          git push
